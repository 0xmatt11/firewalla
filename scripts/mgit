#!/bin/bash

# ----------------------------------------------------------------------------
# This is a wrapper of Git that can recover given local repository from
# disruptive action, like power off or SD card extraction.
# ----------------------------------------------------------------------------

MARKER_BASE=$HOME/git_in_progress

function marked_git {
    marker_dir=$MARKER_BASE/$1
    mkdir -p $marker_dir
    echo $2 > $marker_dir/url
    echo $3 > $marker_dir/branch
    shift 3
    git "$@" || return 1
    rm -rf $marker_dir
}

function recover {
    _rc=0
    for wsdir in $(ls -ad $MARKER_BASE)
    do
        case $wsdir in

            .|..)
                continue
                ;;

            *)
                git_repo=$(cat $MARKER_BASE/$ws_dir/url)
                git_branch=$(cat $MARKER_BASE/$ws_dir/branch)
                (
                cd $HOME
                rm -rf ${wsdir}.bak
                mv -f $wsdir ${wsdir}.bak
                git clone --branch $git_branch --single-branch $git_repo $ws_dir || {
                    rm -rf $wsdir
                    mv -f ${wsdir}.bak $wsdir
                    exit 1
                }
                ) || _rc=1
                ;;
        esac
    done
    return $_rc
}


# ----------------------------------------------------------------------------
# MAIN goes here
# ----------------------------------------------------------------------------

rc=0
if [[ $# -eq 0 ]]; then
    git
else
    # Protect file related Git operations(fetch/pull/reset) with marker files
    case $1 in
        fetch|pull|reset)
            wsdir=$(basename $PWD)
            repo=$(git remote get-url origin)
            branch=$(git rev-parse --abbrev-ref HEAD)
            marked_git $wsdir $repo $branch "$@" || rc=1
            ;;
        recover)
            recover || rc=1
            ;;
        *)
            git "$@" || rc=1
            ;;
    esac
fi

exit $rc
